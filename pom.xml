<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vasx</groupId>
    <artifactId>wirels-sms-gateway</artifactId>
    <!--<packaging>bundle</packaging>-->
    <version>1.0</version>

    <name>wirels-sms-gateway</name>
    <url>http://www.vas-x.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <org.springframework.version>3.0.7.RELEASE</org.springframework.version>
        <camel.core.version>2.10.4</camel.core.version>
        <camel.spring.version>2.10.4</camel.spring.version>
    </properties>
  
    <!--distributionManagement>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Snapshots</name>
            <url>http://192.168.16.31:7000/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>releases</id>
            <name>Releases</name>
            <url>http://192.168.16.31:7000/nexus/content/repositories/releases/</url>
        </repository>
    </distributionManagement-->

    <dependencies>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core-osgi</artifactId>
            <version>${camel.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
            <version>${camel.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jdbc</artifactId>
            <version>${camel.core.version}</version>
    <!-- use the same version as your Camel core version -->
        </dependency>

    <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>

    <!-- testing -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring</artifactId>
            <version>${camel.core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>1.9</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <version>${camel.core.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    <!-- Expression Language (depends on spring-core) Define this if you use 
            Spring Expression APIs (org.springframework.expression.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
            this if you use Spring Bean APIs (org.springframework.beans.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
            spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    <!-- Various Application Context utilities, including EhCache, JavaMail, 
            Quartz, and Freemarker integration Define this if you need any of these integrations -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    
    <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
            spring-aop, spring-context) Define this if you use Spring Transactions or 
            DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
            spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA and 
            iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
            Define this if you need ORM (org.springframework.orm.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
            JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
            spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
    
    <!-- Oracle database driver -->

    <dependency>
        <groupId>org.apache.felix</groupId>
        <artifactId>org.osgi.core</artifactId>
        <version>1.4.0</version>
    </dependency>
    
    <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>3.1</version>
        <type>jar</type>
    </dependency>
    
    <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>17.0</version>
    </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>camel-smpp</artifactId>
            <version>2.12.0_1</version>
            <exclusions>
                <exclusion>
                    <artifactId>org.apache.servicemix.bundles.jsmpp</artifactId>
                    <groupId>org.apache.servicemix.bundles</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jsmpp-sources</artifactId>
            <version>2.1.0_4</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.25</version>
        </dependency>
    </dependencies>
  
    <!--repositories>
        
        <<repository>
        <id>public</id>
            <name>Public Repositories</name>
            <url>http://192.168.16.31:7000/nexus/content/groups/public/</url>
        </repository>>
        
        <repository>
            <id>central</id>
            <name>Central</name>
            <url>http://192.168.16.31:7000/nexus/content/repositories/central/</url>
        </repository>
    
    </repositories-->
  
    <build>
        <defaultGoal>install</defaultGoal>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            
            <!--<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.vasx.cellc.sms.gateway.main.SmsGatewayBundleActivator</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.vasx.cellc.sms.gateway.main.SmsGatewayBundleActivator</mainClass>
                        </manifest>
                        <manifestEntries>
                            <mode>development</mode>
                            <url>${project.url}</url>
                            <key>value</key>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>-->

      <!-- allows the route to be ran via 'mvn camel:run' -->
      <!--<plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-maven-plugin</artifactId>
        <version>2.12.0</version>
        
        <configuration>

          <instructions>

            <Import-Package>
                *;resolution:=optional
                com.ibm.ws.rsadapter.jdbc;resolution:=optional;version=0,
                com.mchange.v2.c3p0;resolution:=optional;version="[0.9.1, 2.0.0)",
                oracle.jdbc;resolution:=optional;version=0,
                oracle.sql;resolution:=optional;version=0,
                org.apache.derby.impl.io;resolution:=optional;version="[10.5.0, 11.0.0)",
                org.apache.derby.jdbc;resolution:=optional;version="[10.5.0, 11.0.0)",
                org.h2;resolution:=optional;version="[1.0.0, 2.0.0)",
                org.hsqldb;resolution:=optional;version="[1.8.0, 2.0.0)",
                org.jboss.resource.adapter.jdbc;resolution:=optional;version=0,
                weblogic.jdbc.extensions;resolution:=optional;version=0,   
                com.sun.rowset;resolution:=optional;version="[1.0.1, 2.0.0)"
            </Import-Package>

            <DynamicImport-Package>*</DynamicImport-Package>

          </instructions>
        </configuration>
      </plugin>-->
      
      <!--<plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.7</version>
        <extensions>true</extensions>
        <configuration>
            <instructions>
                <Bundle-SymbolicName>sms-gateway</Bundle-SymbolicName>
                <Private-Package>com.vasx.cellc.sms.*</Private-Package>
                <Import-Package>javax.sql.*,oracle.sql.*, org.osgi.service.event, org.apache.camel.core.osgi, org.apache.camel.*, org.apache.camel.spring, org.apache.commons.configuration, org.apache.commons.dbutils, org.apache.commons.httpclient, org.apache.commons.httpclient.methods, org.apache.log4j, org.apache.log4j.xml, org.springframework.beans.factory, org.springframework.beans.factory.annotation, org.osgi.framework, org.springframework.context, org.springframework.context.support,oracle.jdbc.pool, org.springframework.beans.factory.config, org.springframework.jdbc.datasource, org.springframework.jdbc.core, org.springframework.mail.javamail, org.springmodules.commons.configuration,org.jsmpp, org.jsmpp.extra, org.jsmpp.session</Import-Package>
                <Import-Package>javax.sql.*,oracle.sql.*, org.osgi.service.event, org.apache.camel.core.osgi, org.apache.camel.*, org.apache.camel.spring, org.apache.commons.configuration, org.apache.commons.configuration.reloading ,org.apache.commons.dbutils, org.apache.commons.httpclient, org.apache.commons.httpclient.methods, org.apache.log4j, org.apache.log4j.xml, org.springframework.beans.factory, org.springframework.beans.factory.annotation, org.osgi.framework, org.springframework.context, org.springframework.context.support,oracle.jdbc.pool, oracle.jdbc.driver, org.springframework.beans.factory.config, org.springframework.jdbc.datasource, org.springframework.jdbc.core, org.springframework.mail.javamail, org.jsmpp, org.jsmpp.extra, org.jsmpp.session</Import-Package>
                <Bundle-Activator>com.vasx.cellc.sms.gateway.main.SmsGatewayBundleActivator</Bundle-Activator>
            </instructions>
        </configuration>
    </plugin>-->
      
            <!--<plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>features-maven-plugin</artifactId>
                <version>2.2.5</version>
                <executions>
                    <execution>
                        <id>create-kar</id>
                        <goals>
                            <goal>create-kar</goal>
                        </goals>
                        <configuration>
                            <featuresFile>${project.basedir}/src/main/resources/features.xml</featuresFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            -->
            
            <!--<plugin>    
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                <instructions>
                    <Export-Package>oracle.jdbc</Export-Package>
                    <Private-Package>oracle.jdbc.*</Private-Package>
                    <Bundle-SymbolicName>ojdbc6</Bundle-SymbolicName>
                    <Bundle-Activator>com.my.company.Activator</Bundle-Activator>
                </instructions>
                </configuration>
            </plugin>-->
            
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <id>copy</id>
                    <phase>package</phase>
                    <goals>
                        <goal>copy-dependencies</goal>
                    </goals>
                    <configuration>
                        <outputDirectory>
                            ${project.build.directory}/lib
                        </outputDirectory>
                    </configuration>
                </execution>
            </executions>
          </plugin>
        </plugins>  
    </build>

</project>
